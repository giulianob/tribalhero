using Game.Data;
using Game.Setup;

namespace Game.Logic.Formulas
{
    public partial class Formula
    {
        public void StrongholdUpkeep(byte level, out int upkeep, out byte unitLevel)
        {
            int[] sUnitLevel = new[] {1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10};

            upkeep = Config.stronghold_npc_base_upkeep + level * Config.stronghold_npc_per_lvl_upkeep;
            unitLevel = (byte)sUnitLevel[level];
        }

        public double[,] StrongholdUnitRatio()
        {
            return new[,] {
                    {1.00, .00, .00, .00, .00, .00, .00, .00,}, 
                    {.90, .10, .00, .00, .00, .00, .00, .00,}, 
                    {.50, .50, .00, .00, .00, .00, .00, .00,},
                    {.50, .25, .25, .00, .00, .00, .00, .00,}, 
                    {.50, .25, .25, .00, .00, .00, .00, .00,}, 
                    {.40, .25, .25, .10, .00, .00, .00, .00,},
                    {.40, .25, .25, .10, .00, .00, .00, .00,}, 
                    {.35, .20, .25, .15, .05, .00, .00, .00,}, 
                    {.25, .20, .25, .15, .15, .00, .00, .00,},
                    {.25, .20, .25, .15, .15, .00, .00, .00,}, 
                    {.20, .15, .20, .15, .15, .15, .00, .00,}, 
                    {.20, .15, .20, .15, .15, .15, .00, .00,},
                    {.15, .10, .15, .15, .25, .20, .00, .00,}, 
                    {.10, .10, .10, .15, .25, .25, .05, .00,}, 
                    {.10, .10, .10, .15, .25, .25, .05, .00,},
                    {.10, .10, .10, .10, .20, .25, .10, .05,}, 
                    {.10, .10, .10, .10, .20, .25, .10, .05,}, 
                    {.10, .10, .10, .10, .15, .20, .15, .10,},
                    {.10, .10, .10, .10, .15, .20, .15, .10,}, 
                    {.10, .10, .10, .10, .15, .20, .15, .10,}
            };
        }

        public ushort[] StrongholdUnitType()
        {
            return new ushort[] {101, 102, 105, 103, 104, 107, 106, 108};
        }
    }
}
